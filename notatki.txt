Zainstaluj wymagane zależności:

Node.js: https://nodejs.org/
Express.js: https://expressjs.com/
MongoDB driver: https://www.npmjs.com/package/mongodb

--------------------------------------------------------------------------------------------------------------------------------------

Aby połączyć plik server.js z stroną internetową, musisz umieścić kod HTML i pliki statyczne (CSS, obrazy itp.) w odpowiednich folderach i skonfigurować serwer Express.js, aby serwował te pliki. Oto jak możesz to zrobić:

Utwórz folder o nazwie public w tej samej lokalizacji, co plik server.js. W tym folderze umieść pliki statyczne takie jak index.html, style.css i inne, które są wymagane do wyrenderowania strony internetowej.

W pliku server.js dodaj następujący kod, aby skonfigurować serwer Express.js do serwowania plików statycznych z folderu public:



plik server.js
const path = require('path');

// ...

// Konfiguruj serwer do serwowania plików statycznych z folderu "public"
app.use(express.static(path.join(__dirname, 'public')));

// ...

// Dodaj to połączenie z bazą danych i endpointy

// ...

// Obsłuż żądanie korzenia
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// ...

// Uruchom serwer
app.listen(port, () => {
  console.log(`Serwer działa na porcie ${port}`);
});





W powyższym kodzie używamy express.static do skonfigurowania serwera Express.js do serwowania plików statycznych z folderu public. Następnie dodajemy endpoint '/', który obsługuje żądanie korzenia (http://localhost:3000/) i zwraca plik index.html.

Upewnij się, że plik index.html znajduje się w folderze public. Ten plik powinien zawierać kod HTML twojej strony internetowej, który będzie wyświetlany przez przeglądarkę.

Uruchom serwer, wykonując polecenie node server.js w wierszu poleceń.

Po uruchomieniu serwera możesz otworzyć przeglądarkę i przejść do http://localhost:3000/, aby zobaczyć swoją stronę internetową. Serwer Express.js będzie serwować pliki statyczne i obsługiwać żądania logowania do bazy danych, które zostały dodane wcześniej.

Pamiętaj, że powyższy kod to podstawowy przykład i można go dostosować do własnych potrzeb, takich jak dodawanie innych endpointów, konfiguracja dodatkowych plików statycznych itp.


